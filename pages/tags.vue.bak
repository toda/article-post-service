<template>
  <div class="max-w-6xl mx-auto py-8">
    <!-- Page Header -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-2">タグ一覧</h1>
      <p class="text-gray-600">興味のあるタグから記事を探しましょう。</p>
    </div>

    <!-- Loading State -->
    <div v-if="loading" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
      <div v-for="i in 20" :key="i" class="animate-pulse">
        <div class="bg-white rounded-lg border border-gray-200 p-6">
          <div class="w-12 h-12 bg-gray-200 rounded-lg mb-4"></div>
          <div class="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
          <div class="h-3 bg-gray-200 rounded w-1/2"></div>
        </div>
      </div>
    </div>

    <!-- Tags Grid -->
    <div v-else-if="tags.length > 0">
      <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
        <NuxtLink
          v-for="tag in tags"
          :key="tag.id"
          :to="`/tags/${tag.id}`"
          class="group bg-white rounded-lg border border-gray-200 p-6 hover:border-gray-300 hover:shadow-md transition-all"
        >
          <div
            class="w-12 h-12 rounded-lg mb-4 flex items-center justify-center text-white text-sm font-bold"
            :style="{ backgroundColor: getTagColor(tag.name) }"
          >
            {{ tag.name.substring(0, 2).toUpperCase() }}
          </div>
          <h3 class="font-semibold text-gray-900 group-hover:text-blue-600 transition-colors text-lg mb-2">
            {{ tag.name }}
          </h3>
          <p class="text-sm text-gray-500">
            {{ tag.articleCount || 0 }}件の記事
          </p>
        </NuxtLink>
      </div>

      <!-- Back to Home Link -->
      <div class="mt-8 text-center">
        <NuxtLink
          to="/"
          class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 transition-colors"
        >
          ← ホームに戻る
        </NuxtLink>
      </div>
    </div>

    <!-- Empty State -->
    <div v-else class="text-center py-12 bg-gray-50 rounded-lg">
      <svg class="mx-auto h-12 w-12 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
      </svg>
      <h3 class="text-lg font-medium text-gray-900 mb-2">タグがありません</h3>
      <p class="text-gray-500">まだタグが登録されていません。</p>
    </div>
  </div>
</template>

<script setup>
import { ref, onMounted } from 'vue'
import { useArticles } from '~/composables/useArticles'

// SEO
useHead({
  title: 'タグ一覧 - Article Platform',
  meta: [
    {
      name: 'description',
      content: 'すべてのタグを表示。興味のある技術タグから記事を探しましょう。'
    }
  ]
})

// Composables
const { getPopularTags } = useArticles()

// State
const tags = ref([])
const loading = ref(false)

// Methods
const loadTags = async () => {
  try {
    loading.value = true
    const result = await getPopularTags(100)
    tags.value = result || []
  } catch (error) {
    console.error('Failed to load tags:', error)
  } finally {
    loading.value = false
  }
}

const getTagColor = (tagName) => {
  // タグ名から一貫した色を生成
  const colors = [
    '#3B82F6', // blue-500
    '#8B5CF6', // purple-500
    '#EC4899', // pink-500
    '#10B981', // green-500
    '#F59E0B', // amber-500
    '#EF4444', // red-500
    '#06B6D4', // cyan-500
    '#6366F1', // indigo-500
  ]

  let hash = 0
  for (let i = 0; i < tagName.length; i++) {
    hash = tagName.charCodeAt(i) + ((hash << 5) - hash)
  }

  return colors[Math.abs(hash) % colors.length]
}

// Lifecycle
onMounted(async () => {
  await loadTags()
})
</script>
