// Authentication initialization plugin
// This ensures auth is initialized on client-side only after the router is ready
export default defineNuxtPlugin(async (nuxtApp) => {
  console.log('ðŸŽ¬ AUTH PLUGIN - Starting authentication initialization')
  console.log('ðŸŽ¬ AUTH PLUGIN - Process client:', process.client)
  console.log('ðŸŽ¬ AUTH PLUGIN - Window available:', typeof window !== 'undefined')

  // Wait for the router to be ready before initializing auth
  await nuxtApp.hooks.callHook('app:mounted')

  try {
    // Get the auth composable
    console.log('ðŸŽ¬ AUTH PLUGIN - Getting useAuth composable...')
    const authComposable = useAuth()
    console.log('ðŸŽ¬ AUTH PLUGIN - useAuth loaded:', authComposable ? 'yes' : 'no')

    if (authComposable && authComposable.initializeAuth) {
      console.log('ðŸŽ¬ AUTH PLUGIN - Calling initializeAuth()')
      authComposable.initializeAuth()
      console.log('ðŸŽ¬ AUTH PLUGIN - initializeAuth() called successfully')
    } else {
      console.error('ðŸŽ¬ AUTH PLUGIN - initializeAuth method not available')
    }
  } catch (error) {
    console.error('ðŸŽ¬ AUTH PLUGIN - Error initializing auth:', error)
  }

  console.log('ðŸŽ¬ AUTH PLUGIN - Authentication initialization complete')
})